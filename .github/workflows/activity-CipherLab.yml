name: CipherLab automation changes

on:
  push:
    branches:
      - main
  schedule:
    - cron: '30 9-2/1 * * *'  # Randomly triggers between 9 AM to 2 AM every hour
    - cron: '0 3 * * *'       # Daily 3 AM sleep period for 5 hours
    - cron: '0 8 * * *'       # Resume activity at 9 AM

jobs:
  setup_and_balance_activity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Create .gitignore for Auto Files
        run: |
          echo "auto_change.txt" >> .gitignore
          echo "YOUR_TEMP_FILE_NAME.txt" >> .gitignore
          git add .gitignore
          git commit -m "Add auto-generated files to .gitignore"
          git push origin main

      - name: Determine Next Action
        id: decide_action
        run: |
          # Fetch current activity percentages (Mock values, update as necessary)
          COMMIT_PCT=93    # Replace with actual value or logic to fetch percentage
          PR_PCT=6         # Replace with actual value or logic to fetch percentage
          ISSUE_PCT=1      # Replace with actual value or logic to fetch percentage
          REVIEW_PCT=0     # Replace with actual value or logic to fetch percentage

          # Priority logic: favor underrepresented activities
          if [[ $REVIEW_PCT -lt 10 ]]; then
            NEXT_ACTION="review"
          elif [[ $ISSUE_PCT -lt 10 ]]; then
            NEXT_ACTION="issue"
          elif [[ $PR_PCT -lt 10 ]]; then
            NEXT_ACTION="pr"
          else
            NEXT_ACTION="commit"
          fi

          echo "::set-output name=action::${NEXT_ACTION}"

      - name: Perform Action
        run: |
          case "${{ steps.decide_action.outputs.action }}" in
            commit)
              echo "Making changes to the file and committing..."
              git config --global user.email "user@example.com"
              git config --global user.name "Automated Script"
              echo "// Change made by script on $(date)" >> YOUR_FILE_PLACEHOLDER.txt
              git add .
              git commit -m "Update regarding specific functionality"
              git push origin main
              ;;
            pr)
              echo "Creating and resolving a PR..."
              git checkout -b feature-auto-pr
              echo "// Auto-generated changes for PR" >> auto_change.txt
              git add .
              git commit -m "Feature: auto-generated PR"
              git push origin feature-auto-pr
              gh pr create --title "Auto PR Feature" --body "This PR was automatically created."
              gh pr merge feature-auto-pr --squash --delete-branch --auto
              ;;
            issue)
              echo "Creating and closing an issue..."
              ISSUE_NUM=$(gh issue create --title "Auto Issue" --body "This is a scripted issue." | grep -o '[0-9]\+')
              gh issue close $ISSUE_NUM --comment "Issue automatically resolved."
              ;;
            review)
              echo "Simulating code review..."
              gh pr list --state open --limit 1 | grep -o '#[0-9]\+' | while read pr_id; do
                gh pr review $pr_id --approve --body "Reviewed: Looks good!"
              done
              ;;
          esac

      - name: Update Activity Tracking
        run: |
          echo "Updating the auto_change.txt for tracking purposes..."
          echo "$(date): Updated by ${GITHUB_ACTOR}" >> auto_change.txt
          git add auto_change.txt
          git commit -m "Update activity log"
          git push origin main

      - name: Clean Up
        run: |
          echo "Ensuring no untracked files or branches are left..."
          git branch -D feature-auto-pr || true
          git stash clear
          git clean -f
